{"ast":null,"code":"var _jsxFileName = \"E:\\\\webdevelopment (Anglena)\\\\REACTJS\\\\keeper\\\\src\\\\CreateNote.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './index.css';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreateNote = props => {\n  _s();\n  const [expand, setExpand] = useState(false);\n  const [note, setNote] = useState({\n    title: ' ',\n    content: ' '\n  });\n  const InputEvent = event => {\n    // const value = event.target.value;  \n    // const name = event.target.name;\n    //above 2 line could be written as ðŸ‘‡\n    //object destructing\n    const {\n      name,\n      value\n    } = event.target;\n    //jitne bhi note ka previously data hoga vo store hoga \n    setNote(prevData => {\n      return {\n        ...prevData,\n        //name check hoga  ki name content k equal hai ya title k\n        // agr equal ho jata hai toh us name s related jo bhi value hai vo paste ho jaega yahan pr\n        [name]: value\n      };\n    });\n    console.log(note);\n  };\n  const addEvent = () => {\n    props.passNote(note);\n    setNote({\n      title: ' ',\n      content: ' '\n    });\n  };\n  const expandIt = () => {\n    setExpand(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" main_note\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [expand ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n          // value={note.title} \n          ,\n          value: note.title !== ' ' ? note.title : '',\n          onChange: InputEvent,\n          name: \"title\",\n          placeholder: \"Title\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"\",\n          column: \"\"\n          // value={ note.content} \n          ,\n          value: note.content !== ' ' ? note.content : '',\n          onChange: InputEvent,\n          name: \"content\",\n          placeholder: \"Write a note....\",\n          onClick: expandIt,\n          onDoubleClick: {\n            bt\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), expand ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: addEvent,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {\n            className: \" plus_sign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(CreateNote, \"dBMW5D8xuD26zkKqO74ZD+Rjnkk=\");\n_c = CreateNote;\nexport default CreateNote;\nvar _c;\n$RefreshReg$(_c, \"CreateNote\");","map":{"version":3,"names":["React","useState","Button","AddIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateNote","props","_s","expand","setExpand","note","setNote","title","content","InputEvent","event","name","value","target","prevData","console","log","addEvent","passNote","expandIt","children","className","type","onChange","placeholder","autoComplete","fileName","_jsxFileName","lineNumber","columnNumber","rows","column","onClick","onDoubleClick","bt","_c","$RefreshReg$"],"sources":["E:/webdevelopment (Anglena)/REACTJS/keeper/src/CreateNote.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './index.css'\r\nimport Button from '@mui/material/Button';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\n\r\n\r\nconst CreateNote = (props) => {\r\n\r\n  const [ expand , setExpand ] = useState(false);\r\n\r\n    const[note , setNote] = useState( {\r\n       title :' ',\r\n       content : ' ',\r\n    });\r\n\r\n    const InputEvent = (event) => {\r\n\r\n      // const value = event.target.value;  \r\n      // const name = event.target.name;\r\n      //above 2 line could be written as ðŸ‘‡\r\n      //object destructing\r\n      const { name, value} = event.target;\r\n      //jitne bhi note ka previously data hoga vo store hoga \r\n      setNote((prevData) =>{\r\n        return {\r\n          ...prevData,\r\n\r\n          //name check hoga  ki name content k equal hai ya title k\r\n          // agr equal ho jata hai toh us name s related jo bhi value hai vo paste ho jaega yahan pr\r\n          [name] : value,\r\n\r\n        }\r\n      });\r\n\r\n      console.log(note);\r\n    };\r\n\r\n    const addEvent =() =>{\r\n   props.passNote(note);\r\n   setNote({\r\n    title: ' ',\r\n    content : ' ',\r\n   })\r\n    }\r\n\r\n    const expandIt = () => {\r\n      setExpand(true);\r\n    }\r\n    \r\n\r\n  return (\r\n    <>\r\n      <div className=' main_note'>\r\n      <form>\r\n      {/* agr hota hai true toh yeh wala part dhikao else  na dhikao */}\r\n      {expand ?\r\n\r\n        <input \r\n        type = \"text\"  \r\n        // value={note.title} \r\n        value={note.title !== ' ' ? note.title : ''}\r\n        onChange={InputEvent} \r\n        name = \"title\" \r\n        placeholder=\"Title\" \r\n        autoComplete = 'off'  \r\n        />\r\n        :null}\r\n     \r\n        <textarea \r\n        rows='' \r\n        column = '' \r\n        // value={ note.content} \r\n        value={note.content !== ' ' ? note.content : ''}\r\n        onChange={InputEvent}\r\n        name = 'content'\r\n        placeholder='Write a note....'\r\n        onClick = {expandIt}\r\n        onDoubleClick={{bt}}\r\n        >\r\n        </textarea>\r\n         \r\n        \r\n    {expand?\r\n        <Button onClick={addEvent}>\r\n            <AddIcon  className =\" plus_sign\" />\r\n        </Button>\r\n        :null} \r\n       \r\n      </form>\r\n\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default CreateNote;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}