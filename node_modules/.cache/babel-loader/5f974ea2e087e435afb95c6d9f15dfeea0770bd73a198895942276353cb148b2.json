{"ast":null,"code":"var _jsxFileName = \"E:\\\\webdevelopment (Anglena)\\\\REACTJS\\\\keeper\\\\src\\\\CreateNote.jsx\",\n  _s = $RefreshSig$();\n//createNote.jsx fileimport React, {useState} from 'react';\nimport './index.css';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreateNote = props => {\n  _s();\n  const [note, setNote] = useState({\n    title: ' ',\n    content: ' '\n  });\n  const InputEvent = event => {\n    // const value = event.target.value;\n    // const name = event.target.name;\n    //above 2 line could be written as ðŸ‘‡\n    //object destructing\n    const {\n      name,\n      value\n    } = event.target;\n    //jitne bhi note ka previously data hoga vo store hoga \n    setNote(prevData => {\n      return {\n        ...prevData,\n        //name check hoga  ki name content k equal hai ya title k\n        // agr equal ho jata hai toh us name s related jo bhi value hai vo paste ho jaega yahan pr\n        [name]: value\n      };\n    });\n    console.log(note);\n  };\n  const addEvent = () => {\n    props.passNote(note);\n    setNote({\n      title: ' ',\n      content: ' '\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" main_note\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: note.title,\n          onChange: InputEvent,\n          name: \"title\",\n          placeholder: \"Title\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \" \",\n          column: \" \",\n          value: note.content,\n          onChange: InputEvent,\n          name: \"content\",\n          placeholder: \"Write a note...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: addEvent,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {\n            className: \" plus_sign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(CreateNote, \"xCJt5irYR/M34QtOqqC5Mhe5+ZU=\");\n_c = CreateNote;\nexport default CreateNote;\nvar _c;\n$RefreshReg$(_c, \"CreateNote\");","map":{"version":3,"names":["Button","AddIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateNote","props","_s","note","setNote","useState","title","content","InputEvent","event","name","value","target","prevData","console","log","addEvent","passNote","children","className","type","onChange","placeholder","autoComplete","fileName","_jsxFileName","lineNumber","columnNumber","rows","column","onClick","_c","$RefreshReg$"],"sources":["E:/webdevelopment (Anglena)/REACTJS/keeper/src/CreateNote.jsx"],"sourcesContent":["//createNote.jsx fileimport React, {useState} from 'react';\r\nimport './index.css'\r\nimport Button from '@mui/material/Button';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\n\r\n\r\nconst CreateNote = (props) => {\r\n\r\n    const[note , setNote] = useState( {\r\n       title :' ',\r\n       content : ' ',\r\n    });\r\n\r\n    const InputEvent = (event) => {\r\n\r\n      // const value = event.target.value;\r\n      // const name = event.target.name;\r\n      //above 2 line could be written as ðŸ‘‡\r\n      //object destructing\r\n      const { name, value} = event.target;\r\n      //jitne bhi note ka previously data hoga vo store hoga \r\n      setNote((prevData) =>{\r\n        return {\r\n          ...prevData,\r\n\r\n          //name check hoga  ki name content k equal hai ya title k\r\n          // agr equal ho jata hai toh us name s related jo bhi value hai vo paste ho jaega yahan pr\r\n          [name] : value,\r\n\r\n        }\r\n      });\r\n\r\n      console.log(note);\r\n    };\r\n\r\n    const addEvent =() =>{\r\n   props.passNote(note);\r\n   setNote({\r\n    title: ' ',\r\n    content : ' ',\r\n   })\r\n    }\r\n    \r\n\r\n  return (\r\n    <>\r\n      <div className=' main_note'>\r\n      <form>\r\n      {/* agr hota hai true toh yeh wala part dhikao else  na dhikao */}\r\n     \r\n\r\n        <input \r\n        type = \"text\"  value={note.title} onChange={InputEvent} name = \"title\" placeholder=\"Title\" autoComplete = 'off'/>\r\n\r\n          \r\n\r\n        <textarea \r\n        rows=' ' \r\n        column = ' ' \r\n        value={ note.content} \r\n        onChange={InputEvent}\r\n        name = 'content'\r\n        placeholder='Write a note...'></textarea>\r\n         \r\n        \r\n\r\n        <Button onClick={addEvent}>\r\n            <AddIcon  className =\" plus_sign\" />\r\n        </Button> \r\n       \r\n      </form>\r\n\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default CreateNote;\r\n"],"mappings":";;AAAA;AACA,OAAO,aAAa;AACpB,OAAOA,MAAM,MAAM,sBAAsB;AACzC,OAAOC,OAAO,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAI9C,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE1B,MAAK,CAACC,IAAI,EAAGC,OAAO,CAAC,GAAGC,QAAQ,CAAE;IAC/BC,KAAK,EAAE,GAAG;IACVC,OAAO,EAAG;EACb,CAAC,CAAC;EAEF,MAAMC,UAAU,GAAIC,KAAK,IAAK;IAE5B;IACA;IACA;IACA;IACA,MAAM;MAAEC,IAAI;MAAEC;IAAK,CAAC,GAAGF,KAAK,CAACG,MAAM;IACnC;IACAR,OAAO,CAAES,QAAQ,IAAI;MACnB,OAAO;QACL,GAAGA,QAAQ;QAEX;QACA;QACA,CAACH,IAAI,GAAIC;MAEX,CAAC;IACH,CAAC,CAAC;IAEFG,OAAO,CAACC,GAAG,CAACZ,IAAI,CAAC;EACnB,CAAC;EAED,MAAMa,QAAQ,GAAEA,CAAA,KAAK;IACtBf,KAAK,CAACgB,QAAQ,CAACd,IAAI,CAAC;IACpBC,OAAO,CAAC;MACPE,KAAK,EAAE,GAAG;MACVC,OAAO,EAAG;IACX,CAAC,CAAC;EACD,CAAC;EAGH,oBACEV,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eACErB,OAAA;MAAKsB,SAAS,EAAC,YAAY;MAAAD,QAAA,eAC3BrB,OAAA;QAAAqB,QAAA,gBAIErB,OAAA;UACAuB,IAAI,EAAG,MAAM;UAAET,KAAK,EAAER,IAAI,CAACG,KAAM;UAACe,QAAQ,EAAEb,UAAW;UAACE,IAAI,EAAG,OAAO;UAACY,WAAW,EAAC,OAAO;UAACC,YAAY,EAAG;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAIjH9B,OAAA;UACA+B,IAAI,EAAC,GAAG;UACRC,MAAM,EAAG,GAAG;UACZlB,KAAK,EAAGR,IAAI,CAACI,OAAQ;UACrBc,QAAQ,EAAEb,UAAW;UACrBE,IAAI,EAAG,SAAS;UAChBY,WAAW,EAAC;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,eAIzC9B,OAAA,CAACH,MAAM;UAACoC,OAAO,EAAEd,QAAS;UAAAE,QAAA,eACtBrB,OAAA,CAACF,OAAO;YAAEwB,SAAS,EAAE;UAAY;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEF;EAAC,gBACN,CAAC;AAEP,CAAC;AAAAzB,EAAA,CArEKF,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AAsEhB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}